# Use postgres/postgres for postgres credentials: DATABASE_URL=postgres://postgres:postgres@127.0.0.1:5432/postgres
version: "3.1"

networks:
  NODE-GRAPHQL:
    driver: bridge

services:
  app:
    container_name: node-graphql-app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
    command: ["tsc-watch", "--onSuccess", "node --env-file=.env ./dist/src/app.js"]
    depends_on:
      - postgres
    networks:
      - NODE-GRAPHQL
  postgres:
    container_name: "node-graphql-postgres"
    image: postgres:15.2
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - NODE-GRAPHQL
  # redis:
  #   container_name: "ts-express-redis"
  #   image: "bitnami/redis:6.0.8"
  #   environment:
  #     REDIS_PASSWORD: password123
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - NODE-GRAPHQL
  prometheus:
    container_name: node-graphql-prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      - NODE-GRAPHQL

  grafana:
    image: grafana/grafana:latest
    container_name: node-graphql-grafana
    ports:
      - "3000:3000"
    volumes:
      # - ./grafana_data:/var/lib/grafana
      # - ./grafana/dashboards/node_dashboard.json:/var/lib/grafana/dashboards/node_dashboard.json
      # - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/grafana_data_source.yml:/etc/grafana/provisioning/datasources/grafana_data_source.yml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    networks:
      - NODE-GRAPHQL